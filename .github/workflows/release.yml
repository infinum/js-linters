name: Release

on:
  push:
    branches:
      - master

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v3

      - name: 🎰 Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: ❶ Install pNPM
        uses: pnpm/action-setup@v2
        with:
          run_install: false

      - name: ❷ Setup pNPM store path
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: ❸ Setup pNPM cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile --prefer-offline --ignore-scripts

      - name: 🧐 Prettier
        run: pnpm prettier:check

      - name: 🫣 Lint
        run: pnpm lint

      - name: 🏗️ Build the pacakge
        run: pnpm build

      - name: 🧪 Run Tests
        run: pnpm test

      - name: 📢 Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          publish: pnpm publish
          commit: 'ci: version packages'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: 🚩 Create Git Tag
        id: create_tag
        if: steps.changesets.outputs.published == 'true'
        run: |
          version=$(npx changeset version)
          git tag $version
          git push origin $version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
